// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component Receive - test Receive - snapshot 1`] = `
<View
  accessibilityLabel="text translated"
  accessible={true}
  style={
    {
      "display": "flex",
      "justifyContent": "flex-start",
      "marginBottom": 140,
      "width": "100%",
    }
  }
>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={false}
    visible={false}
  />
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "rgb(255, 255, 255)",
        "display": "flex",
        "paddingBottom": 0,
        "paddingTop": 10,
        "zIndex": -1,
      }
    }
  >
    <Image
      source={
        {
          "testUri": "../../../assets/img/logobig-zingo.png",
        }
      }
      style={
        {
          "height": 80,
          "resizeMode": "contain",
          "width": 80,
        }
      }
    />
    <View
      style={
        {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          {
            "alignItems": "baseline",
            "flexDirection": "row",
          }
        }
      >
        <Text
          style={
            {
              "color": "rgb(28, 28, 30)",
              "fontSize": 36,
            }
          }
        >
          á™‡
        </Text>
        <Text
          style={
            {
              "color": "rgb(28, 28, 30)",
              "fontSize": 36,
              "fontWeight": "700",
            }
          }
        >
           0.0000
        </Text>
        <Text
          style={
            {
              "color": "rgb(28, 28, 30)",
              "fontSize": 18,
              "paddingBottom": 0,
            }
          }
        >
          0000
        </Text>
        <Text
          style={
            {
              "color": "rgb(28, 28, 30)",
              "fontSize": 36,
            }
          }
        >
           ---
        </Text>
      </View>
    </View>
    <View
      style={
        {
          "alignItems": "baseline",
          "flexDirection": "row",
        }
      }
    >
      <Text
        style={
          {
            "color": undefined,
            "fontSize": 20,
            "marginBottom": 5,
            "marginTop": 0,
          }
        }
      >
        $
      </Text>
      <Text
        style={
          {
            "color": undefined,
            "fontSize": 20,
            "fontWeight": "700",
            "marginBottom": 5,
            "marginTop": 0,
          }
        }
      >
         --
      </Text>
      <Text
        style={
          {
            "color": undefined,
            "fontSize": 20,
            "marginBottom": 5,
            "marginTop": 0,
          }
        }
      >
         USD
      </Text>
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
          "flexWrap": "wrap",
          "justifyContent": "center",
          "marginVertical": 5,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "column",
            "flexWrap": "wrap",
            "justifyContent": "center",
          }
        }
      >
        <Text
          style={
            [
              {
                "paddingHorizontal": 5,
              },
              {
                "color": "rgb(28, 28, 30)",
                "fontSize": 18,
                "fontWeight": "600",
                "opacity": 1,
              },
            ]
          }
        >
          text translated
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      {
        "backgroundColor": "rgb(255, 255, 255)",
        "padding": 10,
        "position": "absolute",
      }
    }
  >
    <View
      accessibilityLabel="text translated"
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <
        color="rgb(216, 216, 216)"
        icon={
          {
            "icon": [
              448,
              512,
              [
                "navicon",
              ],
              "f0c9",
              "M0 96C0 78.3 14.3 64 32 64H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32C14.3 128 0 113.7 0 96zM0 256c0-17.7 14.3-32 32-32H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32c-17.7 0-32-14.3-32-32zM448 416c0 17.7-14.3 32-32 32H32c-17.7 0-32-14.3-32-32s14.3-32 32-32H416c17.7 0 32 14.3 32 32z",
            ],
            "iconName": "bars",
            "prefix": "fas",
          }
        }
        size={48}
      />
    </View>
  </View>
  <View
    style={
      {
        "alignItems": "flex-end",
        "padding": 10,
        "position": "absolute",
        "right": 0,
      }
    }
  >
    <Text
      style={
        {
          "color": "rgb(216, 216, 216)",
          "fontSize": 8,
        }
      }
    >
      (200x200)-1.5
    </Text>
    <Text
      style={
        {
          "color": "rgb(216, 216, 216)",
          "fontSize": 7,
        }
      }
    >
      text translated
    </Text>
  </View>
  <View
    style={
      {
        "backgroundColor": "rgb(0, 122, 255)",
        "height": 1,
        "width": "100%",
      }
    }
  />
  <RCTScrollView
    accessibilityLabel="text translated"
    accessible={true}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
        tintColor="rgb(28, 28, 30)"
        title="text translated"
      />
    }
    style={
      {
        "flexGrow": 1,
        "height": "100%",
        "marginTop": 10,
        "width": "100%",
      }
    }
  >
    <RCTRefreshControl />
    <View />
  </RCTScrollView>
</View>
`;
