name: Integration test

on:
  workflow_call:
    inputs:
      timestamp:
        required: true
        type: string
      cache-key:
        required: true
        type: string
      abi:
        required: true
        type: string
    
env:
  CACHE-KEY: ${{ inputs.cache-key }}
  TIMESTAMP: ${{ inputs.timestamp }}
  ABI: ${{ inputs.abi }}
  REPO-OWNER: ${{ github.repository_owner }}

jobs:
  integration-test:
    name: Integration test
    runs-on: macos-12
    steps:
      - name: Set envs for zingolib CI
        if: ${{ contains(github.repository, 'zingolib') }}
        run: echo "REPO-OWNER=zingolabs" >> $GITHUB_ENV
            
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: ${{ env.REPO-OWNER }}/zingo-mobile
        
      - name: Set envs for x86_64
        if: ${{ env.ABI == 'x86_64' }}
        run: echo "AVD-ARCH=x86_64" >> $GITHUB_ENV

      - name: Set envs for x86
        if: ${{ env.ABI == 'x86' }}
        run: echo "AVD-ARCH=x86" >> $GITHUB_ENV

      - name: Set envs for arm64-v8a
        if: ${{ env.ABI == 'arm64-v8a' }}
        run: echo "AVD-ARCH=x86_64" >> $GITHUB_ENV

      - name: Set envs for armeabi-v7a
        if: ${{ env.ABI == 'armeabi-v7a' }}
        run: echo "AVD-ARCH=x86" >> $GITHUB_ENV
 
      # - uses: actions-rs/toolchain@v1
      #   with:
      #     toolchain: stable
      #     override: true

      # - run: mkdir -p ~/.cargo/bin      

      - name: Install latest nextest release
        uses: taiki-e/install-action@nextest

      # - name: Build cargo-nextest
      #   run: cargo build --package cargo-nextest
  
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '18'
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      
      - name: Add emulator to PATH
        run: echo "${ANDROID_SDK_ROOT}/emulator" >> $GITHUB_PATH
            
      - name: Gradle cache
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5
          build-root-directory: ./android
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/dev' }}
      
      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with: 
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ env.AVD-ARCH }}-integ
          
      - name: Native rust cache
        uses: actions/cache@v3
        with:
          path: android/app/src/main/jniLibs/${{ env.ABI }}
          key: native-rust-${{ env.ABI }}-${{ env.CACHE-KEY }}
          fail-on-cache-miss: true
      
      - name: Cargo cache
        id: cargo-cache
        uses: actions/cache@v3
        with:
          # Following cargo cache recommendations:
          # https://doc.rust-lang.org/cargo/guide/cargo-home.html
          # added 'target' directory to skip compiling dependencies
          path: |
            /root/.cargo/.crates.toml
            /root/.cargo/.crates2.json
            /root/.cargo/bin/
            /root/.cargo/registry/index/
            /root/.cargo/registry/cache/
            /root/.cargo/registry/git/db/
            target/
          key: cargo-zingomobile-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: cargo-zingomobile

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 5
          command: ./scripts/integration_tests.sh -a ${{ env.AVD-ARCH }} -s

      - name: Run integration tests
        working-directory: ./rust
        run: cargo nextest run ${{ env.ABI }} --profile ci

      - name: Upload test reports
        if: ${{ ! cancelled() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-reports-${{ env.ABI }}-${{ env.TIMESTAMP }}
          path: android/app/build/outputs/integration_test_reports

